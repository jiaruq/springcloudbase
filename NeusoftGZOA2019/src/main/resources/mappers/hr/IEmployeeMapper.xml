<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 用户DAO接口Mapping映射 --> 
<mapper namespace="com.neusoft.oa.hr.mapper.IEmployeeMapper">
  
  <cache/>
  <resultMap id="EmployeeResultMap" type="Employee">
      <id property="id" column="EMPID"/>
      <result property="password" column="EMPPASSWORD"/>
      <result property="name" column="EMPName"/>
      <result property="sex" column="EMPSEX"/>
      <result property="age" column="AGE"/>
      <result property="salary" column="SALARY"/>
      <result property="birthday" column="BIRTHDAY"/>
      <result property="joinDate" column="JOINDATE"/>
      <result property="photo" column="PHOTO"/>
      <result property="photoFileName" column="photoFileName"/>
      <result property="photoContentType" column="photoContentType"/>
      <result property="mail" column="MAIL"/>
      <result property="mobile" column="MOBILE"/>
  </resultMap>
  <!-- 关联的部门的ResultMap -->
  <resultMap  id="EmployeeWithDepartmentResultMap" type="Employee" extends="EmployeeResultMap">
  	<association property="department" resultMap="com.neusoft.oa.hr.mapper.IDepartmentMapper.DepartmentResultMap"></association>
  </resultMap>
  <!-- 关联的爱好的ResultMap -->
  <resultMap  id="EmployeeWithRoleResultMap" type="Employee" extends="EmployeeResultMap">
  	<collection property="roles" resultMap="com.neusoft.oa.hr.mapper.IRoleMapper.RoleResultMap"></collection>
  </resultMap>
  <!-- 关联部门和爱好 -->
  <resultMap  id="EmployeeWithDepartmentRolesResultMap" type="Employee" extends="EmployeeResultMap">
  	<association property="department" resultMap="com.neusoft.oa.hr.mapper.IDepartmentMapper.DepartmentResultMap"></association>
  	<collection property="roles" resultMap="com.neusoft.oa.hr.mapper.IRoleMapper.RoleResultMap"></collection>
  </resultMap>
  <!-- 无图片增加 -->
  <insert id="insert"  parameterType="Employee" flushCache="true">
   insert into oa_employee (EMPID,DEPTNO,EMPPASSWORD,EMPNAME,EMPSEX,AGE,SALARY,Birthday,JOINDATE,Mail,Mobile)
   values (#{id},#{department.no},#{password},#{name},#{sex},#{age},#{salary},#{birthday},#{joinDate},#{mail},#{mobile})
  <!-- 有图片增加 -->
  </insert>
  <insert id="insertWithPhoto"  parameterType="Employee" flushCache="true">
   insert into oa_employee (EMPID,DEPTNO,EMPPASSWORD,EMPNAME,EMPSEX,AGE,SALARY,Birthday,JOINDATE,Mail,Mobile,PHOTO,PHOTOFILENAME,PHOTOCONTENTTYPE)
   values (#{id},#{department.no},#{password},#{name},#{sex},#{age},#{salary},#{birthday},#{joinDate},#{mail},#{mobile},#{photo},#{photoFileName},#{photoContentType})
  
  </insert>
  <!-- 无图片修改 -->
  <update id="update" flushCache="true">
   update oa_employee set DEPTNO=#{department.no}, EMPPassword=#{password},EMPName=#{name},EMPSEX=#{sex},age=#{age},salary=#{salary}
   ,Birthday=#{birthday},JoinDate=#{joinDate},MAIL=#{mail},Mobile=#{mobile}
   where EMPID=#{id}
  </update>
  <!-- 有图片修改 -->
  <update id="updateWithPhoto" flushCache="true">
   update oa_employee set DEPTNO=#{department.no}, EMPPassword=#{password},EMPName=#{name},EMPSEX=#{sex},age=#{age},salary=#{salary}
   ,Birthday=#{birthday},JoinDate=#{joinDate},MAIL=#{mail},,Mobile=#{mobile},PHOTO=#{photo},photoFileName=#{photoFileName},photoContentType=#{photoContentType}
   where EMPID=#{id}
  </update>
  
  <update id="updateForDeletePhoto">
  update oa_employee set PHOTO=null,photoFileName=null,photoContentType=null where EMPID=#{id}
  </update>
 
  
  <delete id="delete" flushCache="true">
   delete from oa_employee where  EMPID=#{id}
  </delete>
  
  <select id="selectByIdWithDepartmentAndRoles" resultMap="EmployeeWithDepartmentRolesResultMap" >
  select a.*,b.*,d.* from oa_employee a inner join oa_department b on a.DEPTNO=b.DEPTNO
  left outer join oa_employeeRole c on a.EMPID=c.EMPID 
  left outer join oa_Role d on c.RNO=d.RNO 
   where a.EMPID=#{id}  
  </select>
  
   <!-- 取得所有员工列表，不取关联的部门对象，不取关联的爱好集合,不分页模式 -->
  <select id="selectListByAllWithoutDepartmentAndRoles" resultMap="EmployeeResultMap">
   select EMPUSERID,EMPUSERPASSWORD,EMPUSERNAME,EMPSEX,AGE,SALARY,Birthday,JOINDATE,Mail,PHOTOFILENAME,PHOTOCONTENTTYPE from oa_employee
  
  </select>
  <!-- 取得所有员工列表，不取关联的部门对象，不取关联的爱好集合,分页模式 -->
  <select id="selectListByAllWithoutDepartmentAndRolesWithPage" resultMap="EmployeeResultMap">
   select EMPUSERID,EMPUSERPASSWORD,EMPUSERNAME,EMPSEX,AGE,SALARY,Birthday,JOINDATE,Mail,PHOTOFILENAME,PHOTOCONTENTTYPE from oa_employee
   limit #{start},#{rows}
  </select>
  <!-- 取得所有员工列表，同时取关联的部门对象，不取关联的爱好集合 -->
  <select id="selectListByAllWithDepartmentWithoutRoles" resultMap="EmployeeWithDepartmentResultMap">
  select a.*,b.* from oa_employee a inner join oa_department b on a.DEPTNO=b.DEPTNO
  </select>
  <!-- 根据综合检索条件取得员工列表，取得关联的部门，不取关联的爱好列表，分页模式 -->
  <select id="selectListByConditionWithDepartmentNoAndRolesWithPage" resultMap="EmployeeWithDepartmentResultMap">
  select a.*,b.* from oa_employee a inner join oa_department b on a.DEPTNO=b.DEPTNO
  <where>
     <if test="departmentNo!=0">
      and a.DEPTNO=#{departmentNo}
     </if>
     <if test="roleNo!=0">
     and a.EMPID in (select EMPID from oa_employeeRole where RNO=#{RoleNo})
     </if>
     <if test="sex!=null and sex!=''">
     and a.EMPSEX=#{sex}
     </if>
     <if test="startJoinDate!=null">
     and a.JOINDATE  &gt;=#{startJoinDate}
     </if>
     <if test="endJoinDate!=null">
     and a.JOINDATE &lt;=#{endJoinDate}
     </if>
  </where>
    limit #{start},#{rows}
  </select>
  
  <!-- 根据综合检索条件取得员工个数-->
  <select id="selectCountByCondition" resultType="int">
  select IFNULL(count(EMPID), 0) from oa_employee 
  <where>
     <if test="departmentNo!=0">
      and DEPTNO=#{departmentNo}
     </if>
     <if test="roleNo!=0">
     and EMPID in (select EMPID from oa_employeeRole where RNO=#{roleNo})
     </if>
     <if test="sex!=null and sex!=''">
     and EMPSEX=#{sex}
     </if>
     <if test="startJoinDate!=null">
     and JOINDATE  &gt;=#{startJoinDate}
     </if>
     <if test="endJoinDate!=null">
     and JOINDATE &lt;=#{endJoinDate}
     </if>
  </where>
   
  </select>
  

  <!-- 为员工一次增加多个角色 -->
  <insert id="addRoles">
    insert into oa_employeeRole (EMPID,RNO) values 
    <foreach  item="RoleNo" collection="Roles"   separator="," >
          (#{id},#{RoleNo)
    </foreach>
   </insert>
   
   <!-- 删除指定员工的所有爱好 -->
   <delete id="deleteRoles" >
   delete from oa_employeeRole where EMPID=#{id}
   </delete>
   <!-- 根据ID和password取得员工的人数 -->
   <select id="selectCountByIdAndPassword" resultType="int">
    select IFNULL(count(EMPID), 0) from oa_employee
    <where>
    	<if test="id!=null and id!=''">
    	and EMPID=#{id}
    	</if>
    	<if test="password!=null and password!=''">
    	and EMPPASSWORD=#{password}
    	</if>
    </where>
   </select>
  
  
</mapper>